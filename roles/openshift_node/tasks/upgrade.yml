---
- block:
  - debug:
      msg: "Running openshift_node_pre_cordon_hook {{ openshift_node_pre_cordon_hook }}"
  - include_tasks: "{{ openshift_node_pre_cordon_hook }}"
  when: openshift_node_pre_cordon_hook is defined

- name: Cordon node prior to upgrade
  command: >
    oc adm cordon {{ ansible_nodename | lower }}
    --config={{ openshift_node_kubeconfig_path }}
  delegate_to: localhost

- name: Drain node prior to upgrade
  command: >
    oc adm drain {{ ansible_nodename | lower }}
    --config={{ openshift_node_kubeconfig_path }}
    --force --delete-local-data --ignore-daemonsets
  delegate_to: localhost

# Run the openshift_node_pre_upgrade_hook if defined
- block:
  - debug:
      msg: "Running node openshift_node_pre_upgrade_hook {{ openshift_node_pre_upgrade_hook }}"
  - include_tasks: "{{ openshift_node_pre_upgrade_hook }}"
  when: openshift_node_pre_upgrade_hook is defined

# Upgrade Node Packages
- import_tasks: install.yml

- name: Reboot the host and wait for it to come back
  reboot:
  #  reboot_timeout: 600  # default, 10 minutes

- name: Wait for nodes to report ready
  command: >
    oc get node {{ ansible_nodename | lower }}
    --config={{ openshift_node_kubeconfig_path }}
    --output=jsonpath='{.status.conditions[?(@.type=="Ready")].status}'
  delegate_to: localhost
  run_once: true
  register: oc_get
  until:
  - oc_get.stdout == "True"
  retries: 36
  delay: 5

# Run the openshift_node_pre_uncordon_hook if defined
- block:
  - debug:
      msg: "Running openshift_node_pre_uncordon_hook {{ openshift_node_pre_uncordon_hook }}"
  - include_tasks: "{{ openshift_node_pre_uncordon_hook }}"
  when: openshift_node_pre_uncordon_hook is defined

- name: Uncordon node after upgrade
  command: >
    oc adm uncordon {{ ansible_nodename | lower }}
    --config={{ openshift_node_kubeconfig_path }}
  delegate_to: localhost

# Run the openshift_node_post_upgrade_hook if defined
- block:
  - debug:
      msg: "Running node openshift_node_post_upgrade_hook {{ openshift_node_post_upgrade_hook }}"
  - include_tasks: "{{ openshift_node_post_upgrade_hook }}"
  when: openshift_node_post_upgrade_hook is defined
